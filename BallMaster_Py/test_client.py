#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è Flask API —Å–µ—Ä–≤–µ—Ä–∞.
"""

import requests
import json
from pathlib import Path

API_BASE_URL = "http://localhost:5000"

def test_health():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è."""
    print("üè• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /health...")
    response = requests.get(f"{API_BASE_URL}/health")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    print()

def test_upload_video(video_path: Path):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ."""
    print(f"üì§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /upload —Å —Ñ–∞–π–ª–æ–º {video_path.name}...")
    
    if not video_path.exists():
        print(f"‚ùå –§–∞–π–ª {video_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    with open(video_path, 'rb') as f:
        files = {'video': (video_path.name, f, 'video/mp4')}
        response = requests.post(f"{API_BASE_URL}/upload", files=files)
    
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    print()

def test_get_results(limit: int = 5):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤."""
    print(f"üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /results —Å –ª–∏–º–∏—Ç–æ–º {limit}...")
    response = requests.get(f"{API_BASE_URL}/results?limit={limit}")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    print()

def test_get_stats():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""
    print("üìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /stats...")
    response = requests.get(f"{API_BASE_URL}/stats")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    print()

def test_export():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤."""
    print("üì§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /export...")
    response = requests.get(f"{API_BASE_URL}/export")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    print()

def test_get_saved_videos():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ."""
    print("üìπ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /videos...")
    response = requests.get(f"{API_BASE_URL}/videos")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
    print()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï FLASK API –°–ï–†–í–ï–†–ê")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
    try:
        test_health()
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ python api_server.py")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    test_get_results(3)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    test_get_stats()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
    test_get_saved_videos()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Å–ø–æ—Ä—Ç
    test_export()
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üì± –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")

if __name__ == '__main__':
    main() 